namespace ShipTester.ShipTesting
{
    using System;
    using System.Collections.Generic;
    using ShipTester.Model;

    public static class ShipTestEvaluator
    {
        public static void Evaluate(IEnumerable<ShipTest> shipTests)
        {
            foreach (var shipTest in shipTests)
                Evaluate(shipTest);
        }

        public static void Evaluate(ShipTest shipTest)
        {
            if (shipTest.IsUnderway())
            {
                if (shipTest.IsWithinFiftyMilesOfDuluth())
                {  
                    if (shipTest.IsInDuluthSuperiorHarborForMoreThanHour())
                    {
                        shipTest.Evaluation = shipTest.IsInStLouisBay() || shipTest.IsMovingTowardDuluth();
                    }
                    else
                    {
                        shipTest.Evaluation = !shipTest.IsInDuluthSuperiorHarbor() && shipTest.IsHeadingTowardDuluth();
                    }
                }
                else
                {
                    shipTest.Evaluation = shipTest.IsDestinationDuluth() && shipTest.IsMovingTowardDuluth();
                }
            }

            shipTest.Evaluation = shipTest.Evaluation == shipTest.DerivedEta.HasValue;
            shipTest.Tally = Convert.ToInt32(shipTest.Evaluation);
        }
    }
}
