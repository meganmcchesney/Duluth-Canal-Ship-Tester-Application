// <copyright file="ShipTestPermutator.cs" company="Saturn Systems">
// ShipTester, ShipTester
// by
// Saturn Systems, 11/09/2014
// Megan McChesney
// </copyright>

namespace ShipTester
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using ShipTester.Extensions;
    using ShipTester.Model;
    using ShipTester.Permutation;

    public static class ShipTestPermutator
    {
        public static IEnumerable<ShipTest> GetShipTests()
        {
            return new IPermutator<ShipTest>[] {
                new EnumerablePermutator<double, ShipTest> {
                    Values = new [] { 12.5 },
                    Permute = (speed, shipTest) => shipTest.Speed = speed
                },
                new EnumerablePermutator<NavigationalStatus, ShipTest> {
                    Values = Enum.GetValues(typeof(NavigationalStatus)).Cast<NavigationalStatus>(),
                    Permute = (navStatus, shipTest) => shipTest.NavigationalStatus = navStatus
                },
                new EnumerablePermutator<Position, ShipTest> {
                    Values = ShipPositions.All,
                    Permute = (position, shipTest) => shipTest.Position = position
                },

                 // new EnumerablePermutator<Position, ShipTest> {
                 //   Values = Ports.All,
                 //   Permute = (port, shipTest) => shipTest.Heading = GeoHelper.GetBearing(shipTest.Position, port)
                 // },
                new EnumerablePermutator<int, ShipTest> {
                    Values = Enumerable.Range(240, 20),
                    Permute = (i, shipTest) => shipTest.Heading = i
                },
                new EnumerablePermutator<Position, ShipTest> {
                    Values = Ports.All,
                    Permute = (port, shipTest) => shipTest.Destination = port
                }
            }.GetPermutations();
        }
    }
}
